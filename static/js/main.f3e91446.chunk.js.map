{"version":3,"sources":["images/arrow-right.svg","images/boy.webp","images/girl.webp","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","hero","useRef","imagesWrapper","content","tl","TimelineLite","delay","useEffect","girlImg","firstElementChild","boyImg","lastElementChild","headlineFirst","children","headlineSecond","nextSibling","headlineThird","contentP","contentButton","TweenMax","to","css","visibility","from","y","ease","Power3","easeOut","scale","staggerFrom","opacity","ref","el","className","src","arrow","alt","imgGirl","imgBoy","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gOCkH5BC,MA1Gf,WACE,IAAIC,EAAOC,iBAAO,MACdC,EAAgBD,iBAAO,MACvBE,EAAUF,iBAAO,MAEjBG,EAAK,IAAIC,IAAa,CAAEC,MAAO,KA8CnC,OA5CAC,qBAAU,WACR,IAAMC,EAAUN,EAAcO,kBACxBC,EAASR,EAAcS,iBAEvBC,EAAgBT,EAAQU,SAAS,GAAGA,SAAS,GAC7CC,EAAiBF,EAAcG,YAC/BC,EAAgBF,EAAeC,YAC/BE,EAAWd,EAAQU,SAAS,GAC5BK,EAAgBf,EAAQU,SAAS,GAEvCM,IAASC,GAAGpB,EAAM,GAAI,CACpBqB,IAAK,CACHC,WAAY,aAIhBlB,EAAGmB,KAAKf,EAAS,IAAK,CAAEgB,EAAG,KAAMC,KAAMC,IAAOC,SAAW,YAAYJ,KACnEf,EAAQC,kBACR,EACA,CAAEmB,MAAO,IAAKH,KAAMC,IAAOC,SAC3B,IAEFvB,EAAGmB,KAAKb,EAAQ,IAAK,CAAEc,EAAG,KAAMC,KAAMC,IAAOC,SAAW,IAAKJ,KAC3Db,EAAOD,kBACP,EACA,CAAEmB,MAAO,IAAKH,KAAMC,IAAOC,SAC3B,IAGFvB,EAAGyB,YACD,CAACjB,EAAcC,SAAUC,EAAeD,SAAUG,EAAcH,UAChE,EACA,CACEW,EAAG,GACHC,KAAMC,IAAOC,QACbrB,MAAO,IAET,IACA,YAECiB,KAAKN,EAAU,EAAG,CAAEO,EAAG,GAAIM,QAAS,EAAGL,KAAMC,IAAOC,SAAW,KAC/DJ,KAAKL,EAAe,EAAG,CAAEM,EAAG,GAAIM,QAAS,EAAGL,KAAMC,IAAOC,SAAW,OACtE,CAACvB,IAGF,yBAAK2B,IAAK,SAACC,GAAD,OAAShC,EAAOgC,GAAKC,UAAU,QACvC,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,gBACb,yBAAKF,IAAK,SAACC,GAAD,OAAS7B,EAAU6B,GAAKC,UAAU,sBAC1C,4BACE,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,2BAAf,yBAIF,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,2BAAf,sBAIF,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,2BAAf,mBAGJ,2KAKA,yBAAKA,UAAU,WACb,4BAAQA,UAAU,kBAAlB,WAEE,yBAAKA,UAAU,cACb,yBAAKC,IAAKC,IAAOC,IAAI,UAM/B,yBAAKH,UAAU,eACb,yBACEF,IAAK,SAACC,GAAD,OAAS9B,EAAgB8B,GAC9BC,UAAU,qBAEV,yBAAKA,UAAU,mBACb,yBAAKC,IAAKG,IAASD,IAAI,UAEzB,yBAAKH,UAAU,kBACb,yBAAKC,IAAKI,IAAQF,IAAI,eC5FlBG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f3e91446.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow-right.31be4c0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/boy.39fed611.webp\";","module.exports = __webpack_public_path__ + \"static/media/girl.ab255543.webp\";","import React, { useRef, useEffect } from \"react\";\nimport { TweenMax, TimelineLite, Power3 } from \"gsap\";\nimport \"./App.scss\";\n\nimport arrow from \"./images/arrow-right.svg\";\nimport imgBoy from \"./images/boy.webp\";\nimport imgGirl from \"./images/girl.webp\";\n\nfunction App() {\n  let hero = useRef(null);\n  let imagesWrapper = useRef(null);\n  let content = useRef(null);\n\n  let tl = new TimelineLite({ delay: 0.8 });\n\n  useEffect(() => {\n    const girlImg = imagesWrapper.firstElementChild;\n    const boyImg = imagesWrapper.lastElementChild;\n\n    const headlineFirst = content.children[0].children[0];\n    const headlineSecond = headlineFirst.nextSibling;\n    const headlineThird = headlineSecond.nextSibling;\n    const contentP = content.children[1];\n    const contentButton = content.children[2];\n\n    TweenMax.to(hero, 10, {\n      css: {\n        visibility: \"visible\",\n      },\n    });\n\n    tl.from(girlImg, 1.2, { y: 1280, ease: Power3.easeOut }, \"First TL\").from(\n      girlImg.firstElementChild,\n      2,\n      { scale: 1.6, ease: Power3.easeOut },\n      0.2\n    );\n    tl.from(boyImg, 1.2, { y: 1280, ease: Power3.easeOut }, 0.2).from(\n      boyImg.firstElementChild,\n      2,\n      { scale: 1.6, ease: Power3.easeOut },\n      0.2\n    );\n\n    tl.staggerFrom(\n      [headlineFirst.children, headlineSecond.children, headlineThird.children],\n      1,\n      {\n        y: 44,\n        ease: Power3.easeOut,\n        delay: 0.8,\n      },\n      0.15,\n      \"First TL\" // to sync the timelines name same\n    )\n      .from(contentP, 1, { y: 20, opacity: 0, ease: Power3.easeOut }, 1.4)\n      .from(contentButton, 1, { y: 20, opacity: 0, ease: Power3.easeOut }, 1.6);\n  }, [tl]);\n\n  return (\n    <div ref={(el) => (hero = el)} className=\"hero\">\n      <div className=\"container\">\n        <div className=\"hero-inner\">\n          <div className=\"hero-content\">\n            <div ref={(el) => (content = el)} className=\"hero-content-inner\">\n              <h1>\n                <div className=\"hero-content-line\">\n                  <div className=\"hero-content-line-inner\">\n                    Relieving the burden\n                  </div>\n                </div>\n                <div className=\"hero-content-line\">\n                  <div className=\"hero-content-line-inner\">\n                    of disease caused\n                  </div>\n                </div>\n                <div className=\"hero-content-line\">\n                  <div className=\"hero-content-line-inner\">by behaviors.</div>\n                </div>\n              </h1>\n              <p>\n                Better treats serious cardiometabolic diseases to transform\n                lives and reduce healthcare utilization through the use of\n                digital therapeutics.\n              </p>\n              <div className=\"btn-row\">\n                <button className=\"explore-button\">\n                  Explorer\n                  <div className=\"arrow-icon\">\n                    <img src={arrow} alt=\"\" />\n                  </div>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"hero-images\">\n            <div\n              ref={(el) => (imagesWrapper = el)}\n              className=\"hero-images-inner\"\n            >\n              <div className=\"hero-image girl\">\n                <img src={imgGirl} alt=\"girl\" />\n              </div>\n              <div className=\"hero-image boy\">\n                <img src={imgBoy} alt=\"boy\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}